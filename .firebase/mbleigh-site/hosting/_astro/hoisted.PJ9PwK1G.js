function s(t,e){t.classList.toggle(e)}function o(){return document.documentElement.getAttribute("data-theme")==="dark"}new Proxy({},{get(t,e){throw new Error(`Module "node:fs" has been externalized for browser compatibility. Cannot access "node:fs.${e}" in client code.  See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)}});const l="https://astro-cactus.chriswilliams.dev/";new URL(l).hostname;class a extends HTMLElement{headerEl;menuOpen;mobileButtonEl;toggleMobileMenu=()=>{s(this.headerEl,"menu-open"),this.menuOpen=!this.menuOpen,this.mobileButtonEl.setAttribute("aria-expanded",this.menuOpen.toString())};constructor(){super(),this.headerEl=document.getElementById("main-header"),this.mobileButtonEl=this.querySelector("button"),this.menuOpen=!1,this.mobileButtonEl.addEventListener("click",this.toggleMobileMenu)}}customElements.define("mobile-button",a);class d extends HTMLElement{closeBtn;dialog;dialogFrame;openBtn;closeModal=()=>{this.dialog.open&&(this.dialog.close(),window.removeEventListener("click",this.onWindowClick))};onWindowClick=e=>{("href"in(e.target||{})||document.body.contains(e.target)&&!this.dialogFrame.contains(e.target))&&this.closeModal()};onWindowKeydown=e=>{e.key==="/"&&!this.dialog.open&&(this.openModal(),e.preventDefault())};openModal=e=>{this.dialog.showModal(),this.querySelector("input")?.focus(),e?.stopPropagation(),window.addEventListener("click",this.onWindowClick)};constructor(){super(),this.openBtn=this.querySelector("button[data-open-modal]"),this.closeBtn=this.querySelector("button[data-close-modal]"),this.dialog=this.querySelector("dialog"),this.dialogFrame=this.querySelector(".dialog-frame"),this.openBtn.addEventListener("click",this.openModal),this.openBtn.disabled=!1,this.closeBtn.addEventListener("click",this.closeModal)}connectedCallback(){window.addEventListener("keydown",this.onWindowKeydown)}disconnectedCallback(){window.removeEventListener("keydown",this.onWindowKeydown)}}customElements.define("site-search",d);class r extends HTMLElement{#e;connectedCallback(){const e=this.querySelector("button");e.setAttribute("role","switch"),e.setAttribute("aria-checked",String(o()));const{signal:n}=this.#e=new AbortController;e.addEventListener("click",()=>{let i=new CustomEvent("theme-change",{detail:{theme:o()?"light":"dark"}});document.dispatchEvent(i),e.setAttribute("aria-checked",String(o()))},{signal:n})}disconnectedCallback(){this.#e?.abort()}}customElements.define("theme-toggle",r);
