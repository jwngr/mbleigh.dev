import type { APIContext, InferGetStaticPropsType } from "astro";

import RobotoMonoBold from "@/assets/roboto-mono-700.ttf";
import RobotoMono from "@/assets/roboto-mono-regular.ttf";
import { getAllPosts } from "@/data/post";
import { siteConfig } from "@/site-config";
import { getFormattedDate } from "@/utils";
import { Resvg } from "@resvg/resvg-js";
import satori, { type SatoriOptions } from "satori";
import { html } from "satori-html";

const ogOptions: SatoriOptions = {
	// debug: true,
	fonts: [
		{
			data: Buffer.from(RobotoMono),
			name: "Roboto Mono",
			style: "normal",
			weight: 400,
		},
		{
			data: Buffer.from(RobotoMonoBold),
			name: "Roboto Mono",
			style: "normal",
			weight: 700,
		},
	],
	height: 630,
	width: 1200,
};

const markup = (title: string, pubDate: string) =>
	html`<div tw="flex flex-col w-full h-full bg-[#1d1f21] text-[#c9cacc]">
		<div tw="flex flex-col flex-1 w-full p-10 justify-center">
			<p tw="text-2xl mb-6">${pubDate}</p>
			<h1 tw="text-6xl font-bold leading-snug text-white">${title}</h1>
		</div>
		<div tw="flex items-center justify-between w-full p-10 border-t border-yellow-200 text-xl">
			<div tw="flex items-center text-yellow-200">
				<?xml version="1.0" encoding="utf-8"?>
				<!-- Generator: Adobe Illustrator 26.0.3, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
				<svg
					version="1.1"
					id="Layer_1"
					xmlns="http://www.w3.org/2000/svg"
					xmlns:xlink="http://www.w3.org/1999/xlink"
					x="0px"
					y="0px"
					width="80"
					height="80"
					viewBox="0 0 512 512"
					style="enable-background:new 0 0 512 512;"
					xml:space="preserve"
				>
					<path
						fill="currentColor"
						d="M256,6.04C117.95,6.04,6.04,117.95,6.04,256S117.95,505.96,256,505.96S505.96,394.05,505.96,256
	S394.05,6.04,256,6.04z M306.22,220.48c2-3.33,4.66-5.9,8-7.71c3.33-1.81,6.95-2.81,10.85-3c3.9-0.19,7.57,0.48,10.99,2
	c3.43,1.53,6.28,3.85,8.57,7c2.28,3.14,3.43,7.19,3.43,12.13c0,7.42-2.19,13.09-6.57,16.99c-4.38,3.9-9.28,6-14.7,6.28
	s-10.47-1.33-15.13-4.85c-4.67-3.52-7.28-8.99-7.85-16.42C303.41,227.95,304.22,223.81,306.22,220.48z M164.49,220.48
	c2-3.33,4.66-5.9,7.99-7.71c3.33-1.81,6.95-2.81,10.85-3c3.9-0.19,7.57,0.48,10.99,2c3.43,1.53,6.28,3.85,8.57,7
	c2.28,3.14,3.43,7.19,3.43,12.13c0,7.42-2.19,13.09-6.57,16.99c-4.38,3.9-9.28,6-14.7,6.28s-10.47-1.33-15.13-4.85
	c-4.67-3.52-7.28-8.99-7.85-16.42C161.68,227.95,162.49,223.81,164.49,220.48z M149.88,368.52c-0.38,2.66-1.29,5.14-2.71,7.42
	c-1.43,2.28-3.33,4.18-5.71,5.71c-2.38,1.52-4.9,2.38-7.57,2.57c-5.14,0.38-9.9-0.48-14.28-2.57c-4.38-2.1-8.57-4.57-12.56-7.42
	c-2.67-1.91-5-4.76-7-8.57c-2-3.81-3.48-7.24-4.43-10.28c-1.71-5.33-2.62-10.76-2.71-16.27c-0.1-5.52,0.04-11.04,0.43-16.56
	c0.38-5.52,0.95-11.18,1.71-16.99c0.76-5.8,1.71-11.47,2.85-16.99c-5.52-3.04-10.99-6.85-16.42-11.42s-9.56-9.47-12.42-14.7
	c-2.86-5.23-3.81-10.75-2.86-16.56c0.95-5.8,5.04-11.37,12.28-16.7c2.66-2.09,5.47-4.14,8.42-6.14c2.95-2,6.04-3.76,9.28-5.28
	c-2.1-6.28-3.9-12.85-5.42-19.7c-1.53-6.85-2.33-13.71-2.43-20.56c-0.1-6.85,0.71-13.56,2.43-20.13c1.71-6.57,4.57-12.8,8.57-18.7
	c1.71-2.66,4-5.18,6.85-7.57c2.85-2.38,5.95-4.28,9.28-5.71c3.33-1.43,6.8-2.33,10.42-2.71c3.61-0.38,7.14,0.1,10.56,1.43
	c5.33,2.28,8.99,5.42,10.99,9.42c2,4,2.52,7.9,1.57,11.71c-0.96,3.81-3.24,7-6.85,9.56c-3.62,2.57-8.28,3.57-13.99,3
	c-2.67,3.62-4.33,7.57-5,11.85c-0.67,4.28-0.71,8.71-0.14,13.28c0.57,4.57,1.52,9.04,2.86,13.42c1.33,4.38,2.66,8.57,4,12.56
	c1.14,3.43,2.19,6.76,3.14,9.99c0.95,3.24,1.38,6.28,1.28,9.14c-0.1,2.86-1,5.52-2.71,7.99c-1.71,2.48-4.67,4.76-8.85,6.85
	c-2.86,1.71-5.71,3.28-8.57,4.71c-2.85,1.43-5.62,3.1-8.28,5c3.81,2.28,7.99,4.62,12.56,6.99c4.57,2.38,8.47,5.19,11.71,8.42
	c1.71,1.71,2.85,3.76,3.43,6.14c0.57,2.38,0.86,4.62,0.86,6.71c0,3.81-0.53,7.85-1.57,12.13c-1.05,4.28-1.95,8.33-2.71,12.13
	c-1.53,7.24-2.62,14.56-3.28,21.99c-0.67,7.42,0.43,14.56,3.28,21.41l6.28,2c2.47,1.14,4.71,2.47,6.71,4c2,1.52,3.76,3.52,5.28,6
	C149.78,363.19,150.25,365.85,149.88,368.52z M200.18,334.69c-4.47,3.9-9.47,5.95-14.99,6.14c-5.52,0.19-10.61-1.43-15.28-4.85
	c-4.67-3.43-7.28-8.85-7.85-16.27c-0.57-7.61,1.43-13.37,6-17.27c4.57-3.9,9.75-6,15.56-6.28c5.8-0.29,11.14,1.38,15.99,5
	c4.85,3.62,7.28,9.14,7.28,16.56C206.89,325.12,204.65,330.79,200.18,334.69z M276.32,330.69c-2.19,3.33-4.9,5.85-8.14,7.57
	c-3.24,1.71-6.81,2.61-10.71,2.71c-3.9,0.09-7.57-0.57-10.99-2c-3.43-1.43-6.33-3.67-8.71-6.71c-2.38-3.04-3.76-6.95-4.14-11.71
	c-0.38-4.95,0.52-9.09,2.71-12.42c2.19-3.33,5-5.85,8.42-7.57c3.43-1.71,7.14-2.61,11.13-2.71c4-0.09,7.75,0.57,11.28,2
	c3.52,1.43,6.47,3.71,8.85,6.85c2.38,3.14,3.57,7.09,3.57,11.85C279.61,323.32,278.51,327.36,276.32,330.69z M341.91,334.69
	c-4.47,3.9-9.47,5.95-14.99,6.14c-5.52,0.19-10.61-1.43-15.28-4.85c-4.67-3.43-7.28-8.85-7.85-16.27c-0.57-7.61,1.43-13.37,6-17.27
	c4.57-3.9,9.75-6,15.56-6.28c5.8-0.29,11.13,1.38,15.99,5c4.85,3.62,7.28,9.14,7.28,16.56
	C348.62,325.12,346.38,330.79,341.91,334.69z M431.61,278.3c-5.14,4-10.47,7.42-15.99,10.28c0.38,2.28,0.81,4.52,1.28,6.71
	c0.47,2.19,0.9,4.05,1.29,5.57c1.14,7.24,2.09,14.61,2.86,22.13c0.76,7.52,0.66,14.89-0.29,22.13c-0.38,3.23-1.14,6.66-2.28,10.28
	c-1.14,3.61-2.57,6.85-4.28,9.71c-1.14,1.9-2.24,3.52-3.28,4.85c-1.05,1.33-2.14,2.47-3.28,3.43c-1.14,0.95-2.38,1.9-3.71,2.85
	c-1.33,0.95-2.86,2-4.57,3.14c-4.38,2.86-8.62,4.47-12.71,4.85c-4.09,0.38-7.76-0.14-10.99-1.57c-3.24-1.43-5.9-3.43-7.99-6
	c-2.1-2.57-3.24-5.42-3.43-8.57c-0.19-3.14,0.76-6.24,2.86-9.28c2.09-3.05,5.52-5.71,10.28-8l6.28-2c1.9-3.62,3.04-7.57,3.43-11.85
	c0.38-4.28,0.43-8.57,0.14-12.85c-0.29-4.28-0.86-8.52-1.71-12.71c-0.86-4.18-1.67-8.18-2.43-11.99c-0.76-4.18-1.53-8.18-2.28-11.99
	c-0.76-3.8-0.96-7.37-0.57-10.71c0.38-3.33,1.66-6.38,3.85-9.14c2.19-2.76,5.75-5.09,10.71-7c2.28-1.33,4.57-2.61,6.85-3.85
	c2.28-1.24,4.47-2.61,6.57-4.14c-2.67-1.9-5.42-3.57-8.28-5c-2.85-1.43-5.71-3-8.57-4.71c-4-1.9-6.81-4.09-8.42-6.57
	c-1.62-2.47-2.52-5.14-2.71-7.99c-0.19-2.85,0.14-5.85,1-8.99s1.76-6.33,2.71-9.56c1.52-4.38,2.9-8.75,4.14-13.13
	c1.24-4.38,2.09-8.8,2.57-13.28c0.47-4.47,0.38-8.85-0.29-13.13c-0.67-4.28-2.24-8.42-4.71-12.42c-5.33,0.95-9.81,0.1-13.42-2.57
	c-3.62-2.66-5.95-5.95-7-9.85c-1.05-3.9-0.62-7.9,1.28-11.99c1.9-4.09,5.52-7.09,10.85-8.99c4.38-1.52,8.66-2,12.85-1.43
	c4.18,0.57,8.14,1.95,11.85,4.14c3.71,2.19,7.04,4.9,9.99,8.14c2.95,3.24,5.38,6.76,7.28,10.56c2.85,5.52,4.75,11.33,5.71,17.42
	c0.95,6.09,1.19,12.23,0.71,18.42c-0.48,6.19-1.43,12.33-2.86,18.42c-1.43,6.09-3.1,11.99-5,17.7c3.43,1.9,7.18,4.05,11.28,6.42
	c4.09,2.38,7.47,5.09,10.14,8.14c5.52,6.09,8.37,11.9,8.57,17.42c0.19,5.52-1.19,10.66-4.14,15.42
	C440.79,269.92,436.75,274.3,431.61,278.3z"
					/>
				</svg>

				<p tw="ml-3 font-semibold">${siteConfig.title}</p>
			</div>
			<p>by ${siteConfig.author}</p>
		</div>
	</div>`;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export async function GET(context: APIContext) {
	const { pubDate, title } = context.props as Props;

	const postDate = getFormattedDate(pubDate, {
		month: "long",
		weekday: "long",
	});
	const svg = await satori(markup(title, postDate), ogOptions);
	const png = new Resvg(svg).render().asPng();
	return new Response(png, {
		headers: {
			"Cache-Control": "public, max-age=31536000, immutable",
			"Content-Type": "image/png",
		},
	});
}

export async function getStaticPaths() {
	const posts = await getAllPosts();
	return posts
		.filter(({ data }) => !data.ogImage)
		.map((post) => ({
			params: { slug: post.slug },
			props: {
				pubDate: post.data.updatedDate ?? post.data.publishDate,
				title: post.data.title,
			},
		}));
}
